version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - iot-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - iot-network

  backend:
    build: ./backend
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - osrm
    restart: always
    environment:
      - KAFKA_BROKERS=kafka:9092
    networks:
      - iot-network

  frontend:
    build: ./frontend/frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: always
    networks:
      - iot-network

  truck-simulator:
    build: ./simulator
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKERS=kafka:9092
    networks:
      - iot-network

  osrm:
    image: osrm/osrm-backend:latest
    volumes:
      - ./osrm-data:/data
      - ./osrm-profiles:/profiles
    command: >
      sh -c "osrm-extract -p /profiles/truck.lua /data/central-america-latest.osm.pbf &&
             osrm-partition /data/central-america-latest.osrm &&
             osrm-customize /data/central-america-latest.osrm &&
             osrm-routed --algorithm mld /data/central-america-latest.osrm"
    ports:
      - "5000:5000"
    networks:
      - iot-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

networks:
  iot-network:
    driver: bridge